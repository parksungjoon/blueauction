<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="kr.co.blueauction.mapper.ordersMapper">
	
	<insert id="insert" parameterType="Orders">
		INSERT INTO orders
		            (member_id, 
		             product_id, 
		             phone,
		             orderdate,
		             zipcode, 
				  	 baseaddress, 
				  	 detailaddress, 
		             price) 
		VALUES      (#{memberId}, 
		             #{productId}, 
		             #{phone},
		             now(), 
		             #{zipcode}, 
		             #{baseaddress},
		             #{detailaddress}, 
		             #{price})
	</insert>
	
	<select id="listAll" parameterType="int" resultType="Orders">
		Select *
		From orders
	</select>
	
	<select id="readByno" parameterType="int" resultType="Orders">
		select *
		from orders
		where order_id = #{value}
	</select>
	
	<update id="update" parameterType="Orders">
		update orders
		set phone = {phone},
		    orderdate =  #{orderdate}, 
		    dstate =  #{dstate}, 
		    zipcode = #{zipcode} , 
			baseaddress = #{baseaddress}, 
			detailaddress = #{detailaddress},    
		    price = #{price},
		    paystate = #{paystate}
		where order_id = {orderId}
	</update>

	<delete id="delete">
		delete from orders
		where order_id = {orderId}
	</delete>
	
	<!-- 로그인된 회원의 중고 or 옥션 구매 물품 리스트 조회 -->
	<select id="orderList" parameterType="map" resultType="Orders">
		SELECT orders.*
		FROM orders, product
		WHERE orders.product_id = product.product_id 
		and product.auction_flag = #{auctionFlag}
		AND orders.member_id = #{memberId}
	
	</select>
	
		<!-- 로그인된 회원의 중고 or옥션 판매 물품 리스트를 조회 페이징처리 -->
	<select id="orderListCriteria" resultType="Orders">
		select orders.*
		from  orders, product
		WHERE orders.product_id = product.product_id 
		and product.auction_flag = #{auctionFlag} and member_id=#{memberId}
		order by orderdate desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	
	<select id="countPaging"  resultType="int">
	  select count(orders.product_id)
	from orders, product
	where orders.product_id = product.product_id
    and product.product_id>0 and member_id=#{memberId} and product.auction_flag = #{auctionFlag}
    
	
	
	</select>
	
	<!--주문번호로 주문항목가저기  -->
	<select id="orderselect" parameterType="int" resultType="Orders">
		SELECT *
		from orders
		where order_id=#{orderId}
	
	</select>
	
	<!--해당 물건에대한 주문 갯수  -->
	<select id="ordercount" parameterType="int" resultType="int">
	select count(orders.order_id)
	from orders
	where product_Id=#{productId}
	
	</select>
	

	<!--결제  -->
	<update id="payupdate" parameterType="int">
		  
	
	update orders, product set
	orders.paystate ="Y", product.auctionstate="AFTER"
	where order_id=#{orderId} and product.product_id =orders.product_id;
	</update>
	
	<!-- 상품번호로 주문항목 가저오기 -->
	<select id="searchorder" resultType="Orders">
	select *
	from orders
	where product_id=#{productId}
	
	
	</select>

</mapper>