<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<mapper namespace="kr.co.blueauction.product.dao.ProductDao">
	
	<!-- 상품 등록 -->
	<insert id="create" parameterType="Product" useGeneratedKeys="true" keyProperty="productId">
		INSERT INTO product
		 			(category_id,
		             smallid,
		             seller, 
		             salemotive, 
		             usingtime, 
		             productinfo, 
		             <if test="categoryId == 1">
		             	price, 
		             </if>
		             deliverytype,
		             name,
		             <if test="categoryId == 2">
			             auctionstart,
			             auctionend,
			             basicprice,
		             </if>
			         auction_flag
		           ) 
		VALUES     (#{categoryId},
					#{smallid}, 
		            #{seller}, 
		            #{salemotive}, 
		            #{usingtime}, 
		            #{productinfo}, 
		            <if test="categoryId == 1">
		            #{price}, 
		            </if>
		            #{deliverytype},
		            #{name},
		           	<if test="categoryId == 2">
			       		#{auctionstart}, 
			            date_add(#{auctionstart}, interval '30' minute), 
			            #{basicprice}, 
		            </if>
			        #{auctionFlag}
		            )
			</insert>
			
	<!-- 상품 전체 조회 --> 
	<select id="listAll" parameterType="string" resultType="Product">
		SELECT product_id, 
		       category_id,
		       smallid, 
		       seller, 
		       salemotive, 
		       usingtime, 
		       productinfo, 
		       price, 
		       deliverytype,
		       name, 
		       regdate, 
		       auction_flag,
		       auctionstart, 
		       auctionend, 
		       basicprice, 
		       auctionstate 
		FROM   product 
		WHERE  auction_flag = #{value}
	</select>
	
	<!-- 상품 아이디에 따른 상품 조회 -->
	<select id="read" parameterType="int" resultType="Product">
		SELECT product_id, 
		       category_id,
		       smallid, 
		       seller, 
		       salemotive, 
		       usingtime, 
		       productinfo, 
		       price, 
		       deliverytype,
		       name, 
		       regdate,
		       auction_flag, 
		       auctionstart, 
		       auctionend, 
		       basicprice, 
		       auctionstate 
		FROM   product 
		WHERE  product_id = #{value}
	</select>
	
	<!-- 상품 삭제 -->
	<delete id="delete" parameterType="int">
		DELETE FROM product 
		WHERE  product_id = #{value}
	</delete>
	
	 <!-- 상품 수정 -->
   <update id="update" parameterType="Product">
      UPDATE product 
      SET    name = #{name},
            usingtime = #{usingtime},
            salemotive = #{salemotive}, 
             productinfo = #{productinfo}, 
             <if test="categoryId = 1">
             price = #{price}, 
             </if>
             <if test="categoryId = 2">
             auctionstart = #{auctionstart}, 
             auctionend = date_add(#{auctionstart}, interval '30' minute), 
             basicprice = #{basicprice}, 
             </if>
            deliverytype = #{deliverytype}
      WHERE  product_id = #{productId} 
   </update>

<!--{요청 페이지,  페이지당 출력 게시글 수, 검색 종류, 검색 값, 카테고리}에 대한 결과 조회 -->
   <select id="listByCri" parameterType="map" resultType="Product">
      SELECT p.product_id product_id, 
             p.category_id category_id, 
             p.smallid smallid, 
             p.seller seller, 
             p.salemotive salemotive, 
             p.usingtime usingtime, 
             p.productinfo productinfo, 
             p.price price, 
             p.deliverytype deliverytype,
             p.name name, 
             p.regdate regdate, 
             p.auctionstart auctionstart, 
             p.auctionend auctionend, 
             p.basicprice basicprice, 
             p.auctionstate auctionstate,
             b.bidprice bidprice,
             ph.photoname mainphoto 
      FROM   product p left join bid b
      ON p.product_id = b.product_id 
      AND 
      b.bidprice IN 
      ( 
               SELECT   max(bidprice) 
               FROM     bid 
               GROUP BY product_id)
       left join photo ph
       ON p.product_id = ph.product_id 
		AND 
		ph.photoname IN 
		( 
		         SELECT   photoname 
		         FROM     photo 
		         GROUP BY product_id 
		         HAVING   min(photo_id))
      WHERE  p.category_id = #{cri.category}
      <if test="cri.smallid != 0">
         and p.smallid = #{cri.smallid}
      </if>
      <if test="cri.keyword != null">
         AND p.name LIKE CONCAT('%', #{cri.keyword}, '%')
      </if>
      <if test="type != 0">
         <if test="type == 1">
            AND p.auctionstate = 'BEFORE'
         </if>
         <if test="type == 2">
            AND p.auctionstate = 'DOING'
         </if>
         <if test="type == 3">
            AND p.auctionstate = 'AFTER'
         </if>
      </if> 
      ORDER  BY p.product_id DESC, p.regdate DESC 
      LIMIT  #{cri.pageStart}, #{cri.perPageNum}; 
   </select>
	
	<!-- 검색 조건에 따른 전체 상품 리스트 수 -->
	<select id="listBySearchCount" parameterType="map" resultType="int">
		SELECT Count(product_id) count
		FROM   product 
		WHERE  category_id = #{cri.category}
		<if test="cri.smallid != 0">
		and smallid = #{cri.smallid}
		</if>
		<if test="type != 0">
			<if test="type == 1">
				AND auctionstate = 'BEFORE'
			</if>
			<if test="type == 2">
				AND auctionstate = 'DOING'
			</if>
			<if test="type == 3">
				AND auctionstate = 'AFTER'
			</if>
		</if> 
	</select>	
	
	<!-- auctionstate 상태 변경 -->
	   <update id="updateAuctionsatate">
	   <![CDATA[
	   UPDATE product
	   set auctionstate = case 
	   when auctionstart <= now() and auctionend > now()  then 'DOING'
	   when auctionend <= now() then 'AFTER'
	   else 'BEFORE' end
	   ]]> 
	   </update>
	   
	
	<!-- 로그인된 회원의 중고 or옥션 판매 물품 리스트를 조회 -->
	<select id="productSellList" parameterType="map" resultType="Product">
		SELECT *
		FROM   product 
		WHERE  auction_flag = #{auctionFlag} and seller=#{memberId}
	</select>
	   
	   
</mapper>